import telebot
import config
import random
from telebot import types

# –¥–æ–±–∞–≤–∏—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É, (—Ä–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ, –∫–∞–∫ –¥–µ–ª–∞) markup

bot = telebot.TeleBot(config.TOKEN)

message_help = "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞\n\n –î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –∑–∞–π—Ç–∏ –≤ —ç—Ç—É –Ω–∞—Å—Ç—Ä–æ–π–∫—É –¥—Ä—É–≥–∏–º —Å–ø–æ—Å–æ–±–æ–º –Ω–∞–ø–∏—à–∏—Ç–µ '/help'.\n '/start' - –Ω–∞—á–∞—Ç—å.\n '/gen' - –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–∞—Ä–æ–ª—è\n '/how_a' - –∫–∞–∫ –¥–µ–ª–∞\n\n '/exit - –¥–æ—Å–≤–∏–¥–∞–Ω–∏—è'"
#/help, /gen, /how_a, /exit

# welcome
r = "Hello my friend! \n–Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –∑–Ω–∞–µ—Ç –∫–∞–∫–∏–µ —á–∏—Å–ª–∞ –ø—Ä–æ—Å—Ç—ã–µ, –∞ –∫–∞–∫–∏–µ –Ω–µ—Ç. \n–ù–∞–ø–∏—à–∏ –ª—é–±–æ–µ —á–∏—Å–ª–æ, –∏ —è —Å–∫–∞–∂—É —Ç–µ–±–µ: –ø—Ä–æ—Å—Ç–æ–µ –æ–Ω–æ –∏–ª–∏ –Ω–µ—Ç!"

# keyboard
markup_lll = types.ReplyKeyboardMarkup(resize_keyboard=True)
item1 = types.KeyboardButton("üé≤ –†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ")
item2 = types.KeyboardButton("üòä –ö–∞–∫ –¥–µ–ª–∞?")
item3 = types.KeyboardButton("üîë –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–∞—Ä–æ–ª—è")
item4 = types.KeyboardButton("")
item5 = types.KeyboardButton("")
item6 = types.KeyboardButton("üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞")
#item = types.KeyboardButton("üéÆ –ò–≥—Ä–∞ –≤ –∫—Ä–µ—Å—Ç–∏–∫–∏-–Ω–æ–ª–∏–∫–∏")
markup_lll.add(item1, item2, item3, item6)

@bot.message_handler(commands=['start'])
def welcome(message):
    bot.send_message(message.chat.id, r.format(message.from_user, bot.get_me()), parse_mode='html', reply_markup=markup_lll)
    # (message.chat.id, '–ü—Ä–∏–≤–µ—Ç!')

@bot.message_handler(content_types=['text'])
def lalala(message):
    # –Ω–∞–π—Ç–∏ –≤ message.text —á–∏—Å–ª–∞, –µ—Å–ª–∏ –µ—Å—Ç—å - —Ç–æ –ø–µ—Ä–µ–≤–æ–¥ –Ω–∞ –ø–æ–∏—Å–∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞.
    # –µ—Å–ª–∏ —á–∏—Å–ª–∞ –Ω–µ—Ç, —Ç–æ –¥—Ä—É–≥–æ–µ - (–ø—Ä–∏–≤–µ—Ç, –ø–æ–∫–∞, –∫–∞–∫ –¥–µ–ª–∞, —Å–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏)
    message_end = ''
    number = ''
    cikl = True
    if message.text.isdigit():
        # –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ - —á–∏—Å–ª–æ
        try:
            # –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ
            number = int(message.text)
        except:
            cikl = False
            number = 1
        # –µ—Å–ª–∏ –≤—Å–µ –æ–∫, —Ç–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        if cikl:
            # –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
            mess = isprime(number)
            if mess:
                message_end = '–ß–∏—Å–ª–æ ' + str(number) + ' –ø—Ä–æ—Å—Ç–æ–µ!'
                # —á–∏—Å–ª–æ X –ø—Ä–æ—Å—Ç–æ–µ
                # —á–∏—Å–ª–æ X —Å–æ—Å—Ç–∞–≤–Ω–æ–µ
                # —ç—Ç–æ —á–∏—Å–ª–æ -–ø—Ä–æ—Å—Ç–æ–µ -—Å–æ—Å—Ç–∞–≤–Ω–æ–µ
                # —ç—Ç–æ —á–∏—Å–ª–æ —Å–æ—Å—Ç–∞–≤–Ω–æ–µ, —Ç–∞–∫ –∫–∞–∫ 2 * 3 = 6.
                #  
            else:
                message_end = '–ß–∏—Å–ª–æ ' + str(number) + ' —Å–æ—Å—Ç–∞–≤–Ω–æ–µ!'
                # –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏ isprime –Ω–∞–π—Ç–∏ 
    elif message.chat.type == 'private':
        if message.text == 'üé≤ –†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ':
            bot.send_message(message.chat.id, str(random.randint(0, 10000)))
        elif message.text == 'üòä –ö–∞–∫ –¥–µ–ª–∞?':

            markup = types.InlineKeyboardMarkup(row_width=2)
            item1 = types.InlineKeyboardButton("–•–æ—Ä–æ—à–æ", callback_data='good')
            item2 = types.InlineKeyboardButton("–ù–µ –æ—á–µ–Ω—å", callback_data='bad')

            markup.add(item1, item2)

            bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ, —Å–∞–º –∫–∞–∫?', reply_markup=markup)
        elif message.text == 'üîë –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–∞—Ä–æ–ª—è':
            f = ""
            for i in range(0, 12):
                a = random.randint(0, 15)
                if a > 9:
                    if a == 10: a = "A"
                    if a == 11: a = "B"
                    if a == 12: a = "C"
                    if a == 13: a = "D"
                    if a == 14: a = "E"
                    if a == 15: a = "F"
                f += str(a)
                if i % 2 == 1:
                    f += " "
            bot.send_message(message.chat.id, f)
        elif message.text == 'üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞' or message.text == '/help':
            #/help, /gen, /how_a, /exit
            bot.send_message(message.chat.id, message_help)

        else:
            pass
            # bot.send_message(message.chat.id, '–Ø –Ω–µ –∑–Ω–∞—é —á—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å')
            # –µ—Å–ª–∏ —á–∏—Å–ª–æ –Ω–µ —É–∫–∞–∑–∞–Ω–æ
            # message_end = "–í—ã –Ω–µ –≤—ã–±—Ä–∞–ª–∏ –Ω–∏–∫–∞–∫–æ–≥–æ —á–∏—Å–ª–∞!"
    # ================
    if (message.text == "–ö–∞–∫ –¥–µ–ª–∞?") or (message.text == "–∫–∞–∫ –¥–µ–ª–∞?") or (message.text == "–ö–∞–∫ –¥–µ–ª–∞") or (message.text == "–∫–∞–∫–¥–µ–ª–∞") or (message.text == "–∫–∞–∫–¥–µ–ª–∞?"):
        d = ["–•–æ—Ä–æ—à–æ", "–Ω–æ—Ä–º–∞–ª—å–Ω–æ", "–õ—É—á—à–µ –Ω–µ–∫—É–¥–∞.", "–Ω–µ–ø–ª–æ—Ö–æ", "–ó–¥–æ—Ä–æ–≤–æ!", "–æ–∫–µ–π", "–∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ", "–ø—Ä–µ–∫—Ä–∞—Å–Ω–æ"]
        # –ø—Ä–æ—Ü–µ—Å—Å –∏–∑–º–µ–Ω–µ–Ω–∏—è D
        message_end = d[random.randint(0, 8)]
        # D = 1
        # pass
    
    if (message.text == "–ø–æ–∫–∞") or (message.text == "–ü–æ–∫–∞") or (message.text == "–ø–æ–∫–∞.") or (message.text == "–ü–æ–∫–∞.") or (message.text == '/exit'):
        message_end = "–ü–æ–∫–∞!"
        #end.

    if (message.text == "–ø—Ä–∏–≤–µ—Ç") or (message.text == "–ü—Ä–∏–≤–µ—Ç"):
        message_end = "–ü—Ä–∏–≤–µ—Ç"
        bot.send_message(message.chat.id, r.format(message.from_user, bot.get_me()), parse_mode='html', reply_markup=markup_lll)

    if message.text == '/help':
        #bot.send_message(message.chat.id, message_help)
        pass

    if message.text == '/gen':
        f = ""
        for i in range(0, 12):
            a = random.randint(0, 15)
            if a > 9:
                if a == 10: a = "A"
                if a == 11: a = "B"
                if a == 12: a = "C"
                if a == 13: a = "D"
                if a == 14: a = "E"
                if a == 15: a = "F"
            f += str(a)
            if i % 2 == 1:
                f += " "
        bot.send_message(message.chat.id, f)

    if message.text == '/how_a':
        markup = types.InlineKeyboardMarkup(row_width=2)
        item1 = types.InlineKeyboardButton("–•–æ—Ä–æ—à–æ", callback_data='good')
        item2 = types.InlineKeyboardButton("–ù–µ –æ—á–µ–Ω—å", callback_data='bad')

        markup.add(item1, item2)

        bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ, —Å–∞–º –∫–∞–∫?', reply_markup=markup)

    # –æ—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞, end message
    if message_end != '':
        bot.send_message(message.chat.id, message_end)

# —Ñ—É–Ω–∫—Ü–∏—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø—Ä–æ—Å—Ç–æ–≥–æ —á–∏—Å–ª–∞, –º–µ—Ç–æ–¥–æ–º while.
def isprime(n):
    d = 2
    while n % d != 0:
        d += 1
    return d == n

@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.message:
            if call.data == 'good':
                bot.send_message(call.message.chat.id, '–í–æ—Ç –∏ –æ—Ç–ª–∏—á–Ω–µ–Ω—å–∫–æ üòä')
            elif call.data == 'bad':
                bot.send_message(call.message.chat.id, '–ë—ã–≤–∞–µ—Ç üò¢')

            # remove inline buttons
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="üòä –ö–∞–∫ –¥–µ–ª–∞?",
                reply_markup=None)
 
            # show alert
            # bot.answer_callback_query(callback_query_id=call.id, show_alert=False, text="–¢–ï–°–¢")
    
    except Exception as e:
        print(repr(e))

# RUN
bot.polling(none_stop=True)

# TODO:
# –±–æ–ª—å—à–µ —Ç–µ–∫—Å—Ç–∞ –¥–æ–±–∞–≤–∏—Ç—å.

# –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π...
# +–∏–∑–º–µ–Ω–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é isprime —Ç–∞–∫, —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –ø–æ–ª—É—á–∏—Ç—å —á–∏—Å–ª–∞, —Å–æ—Å—Ç–∞–≤–ª—è—é—â–∏–µ.
# 1. –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —á–∏—Å–ª–∞ –∏–∑ –∫–æ—Ç–æ—Ä—ã—Ö —Å–æ—Å—Ç–æ–∏—Ç, –≤ —Å–ª—É—á–∞–µ –µ—Å–ª–∏ –æ–Ω–æ —Å–æ—Å—Ç–∞–≤–Ω–æ–µ
# -+–î–æ–±–∞–≤–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é —Ä–∞–Ω–¥–æ–º–Ω–æ–≥–æ —á–∏—Å–ª–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä —á—Ç–æ–±—ã –ø–æ—Ç–æ–º –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —É–∂–µ –Ω–∞ –Ω—ë–º –ø—Ä–æ—Å—Ç–æ–µ –æ–Ω–æ –∏–ª–∏ –Ω–µ—Ç)
# 3.1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–æ–ª—è - —Ö–æ—Ä–æ—à–∏–π –ø–∞—Ä–æ–ª—å –∏–ª–∏ –ø–ª–æ—Ö–æ–π.
# –≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω–æ: –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –≤–∏—Ä—É—Å–æ–≤.